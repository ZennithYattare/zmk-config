/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   BSPC   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | SPACE | RAISE| PG_DN  | PG_UP   |

            bindings = <
&none      &none  &none  &none     &none     &soft_off                                 &none  &none      &none      &none    &none     &none
&kp TAB    &kp Q  &kp W  &kp E     &kp R     &kp T                                     &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F     &kp G                                     &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V     &kp B      &kp LEFT_BRACKET    &kp RBKT   &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LALT  &kp LGUI  &mo 1      &kp ENTER           &kp SPACE  &mo 2  &kp PG_DN  &kp PG_UP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &none         &bt BT_NXT        &none              &none         &none                                        &trans        &trans    &trans     &trans                &trans                 &trans
&kp ESCAPE  &kp EXCL      &kp AT            &kp HASH           &kp DOLLAR    &kp PERCENT                                  &kp CARET     &kp AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans      &kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3       &kp NUMBER_4  &kp N5                                       &kp NUMBER_6  &kp N7    &kp N8     &kp N9                &kp N0                 &trans
&trans      &kp GRAVE     &ext_power EP_ON  &ext_power EP_OFF  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE    &trans  &kp PIPE      &kp BSLH  &none      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                            &kp HOME           &kp END       &trans           &trans              &trans  &mo 3         &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans                       &trans       &trans     &kp RG(L)  &trans          &trans           &trans
&kp F1  &kp F2  &kp F3  &kp F4     &kp F5     &kp F6                       &kp F7       &kp F8     &kp F9     &kp F10         &kp F11          &kp F12
&trans  &trans  &trans  &kp LC(D)  &kp LC(F)  &kp LC(G)                    &trans       &kp LEFT   &kp DOWN   &kp UP          &kp RIGHT        &kp MINUS
&trans  &trans  &trans  &trans     &trans     &trans     &trans    &tog 4  &kp KP_PLUS  &kp EQUAL  &kp DEL    &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
                        &trans     &trans     &mo 3      &trans    &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_layer {
            bindings = <
&none         &none      &none      &none          &none              &none                     &none      &none                  &none               &none             &none      &none
&kp LS(L)     &kp LC(H)  &kp LC(L)  &kp RS(RC(E))  &none              &none                     &none      &none                  &none               &none             &kp RC(P)  &none
&kp CAPSLOCK  &none      &none      &none          &none              &none                     &kp RC(H)  &kp RC(J)              &kp RC(DOWN_ARROW)  &kp RC(UP_ARROW)  &none      &none
&none         &none      &none      &none          &kp LC(BACKSLASH)  &none   &none     &none   &kp LC(N)  &kp RC(RS(BACKSLASH))  &none               &none             &none      &none
                                    &kp LC(HOME)   &kp LC(END)        &trans  &trans    &trans  &trans     &trans                 &trans
            >;
        };

        mo4 {
            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3    &kp N4          &kp N5                                 &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB     &kp Q   &kp W   &kp E     &kp R           &kp T                                  &kp Y   &kp U      &kp I      &kp O    &kp P     &kp MINUS
&kp CLCK    &kp A   &kp S   &kp D     &kp F           &kp G                                  &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C     &kp V           &kp B   &kp LEFT_BRACKET    &tog 4     &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                            &kp LALT  &kp LEFT_SHIFT  &mo 5   &kp SPACE           &kp SPACE  &mo 2   &kp ENTER  &kp PG_UP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mo5 {
            bindings = <
&none   &none   &none   &none   &none   &none                     &none   &none   &none   &none  &none  &none
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &none   &none   &none   &none  &none  &none
&none   &none   &none   &none   &kp M   &kp P                     &none   &none   &none   &none  &none  &none
&none   &none   &none   &none   &kp I   &kp K   &kp J     &none   &none   &none   &none   &none  &none  &none
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
